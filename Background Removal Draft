import cv2

def remove_background(image_path):
    # Load the image
    image = cv2.imread(image_path)

    # Convert the image to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Apply Gaussian blur to reduce noise
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)

    # Use adaptive thresholding to create a binary image
    _, threshold = cv2.threshold(blurred, 100, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)

    # Find contours in the binary image
    contours, _ = cv2.findContours(threshold, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Create a mask for the foreground
    mask = cv2.drawContours(image, contours, -1, (0, 0, 0), thickness=cv2.FILLED)

    # Apply the mask to the original image
    result = cv2.bitwise_and(image, mask)

    return result

# Example usage
image_path = 'path/to/your/image.jpg'
result = remove_background(image_path)

# Display the result
cv2.imshow('Original Image', cv2.imread(image_path))
cv2.imshow('Background Removed', result)
cv2.waitKey(0)
cv2.destroyAllWindows()
